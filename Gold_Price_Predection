import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics
     

data = pd.read_csv('/content/sample_data/gld_price_data.csv')
     

data.head()
data.shape
data.isnull().sum()
data.describe()

correlation = data.corr()


plt.figure(figsize=(8,8))
sns.heatmap(correlation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Reds'
<Axes: >

print(correlation['GLD'])
sns.distplot(data['GLD'], color = 'Red')
<Axes: xlabel='GLD', ylabel='Density'>

X = data.drop(['Date','GLD'],axis=1)
Y = data['GLD']

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state = 3)
     

regressor = RandomForestRegressor(n_estimators=100)
     

regressor.fit(X_train,Y_train)
RandomForestRegressor()
test_data_prediction = regressor.predict(X_test)
     

error_score = metrics.r2_score(Y_test, test_data_prediction)
print(error_score)
    

Y_test = list(Y_test)
plt.plot(Y_test, color = 'blue', label = 'Actual')
plt.plot(test_data_prediction, color = 'red', label = 'Predicted')
plt.legend
plt.xlabel('no. of values')
plt.ylabel('Gold Prices')
plt.title("Actual vs Predicted Gold prices")
plt.show()
